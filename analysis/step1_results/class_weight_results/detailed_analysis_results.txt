================================================================================
🌳 고래 거래 탐지 분석 - 상세 분석 결과
================================================================================
📅 분석 일시: 2025-06-06 17:48:37
📊 총 샘플 수: 888,942건
🎯 훈련 데이터: 622,259건 (70%)
🎯 테스트 데이터: 266,683건 (30%)
📈 피처 수: 5개
📈 사용 피처: ['total_volume_btc', 'input_count', 'output_count', 'concentration', 'fee_btc']
⚖️ 클래스 불균형 비율: 76.5:1

📊 클래스 분포:
  클래스 0 (수집형고래): 131,468건 (14.8%)
  클래스 1 (분산형고래): 24,058건 (2.7%)
  클래스 2 (급행형고래): 44,123건 (5.0%)
  클래스 3 (집중형고래): 680,403건 (76.5%)
  클래스 4 (거대형고래): 8,890건 (1.0%)

==================================================
⚖️ 계산된 Class Weight 전략:
==================================================

🎯 Balanced 전략:
  클래스 0: 1.35
  클래스 1: 7.39
  클래스 2: 4.03
  클래스 3: 0.26
  클래스 4: 20.00

🎯 Behavior Focused 전략:
  클래스 0: 13.52
  클래스 1: 36.95
  클래스 2: 80.59
  클래스 3: 0.26
  클래스 4: 999.93

🎯 Rarity Based 전략:
  클래스 0: 5.00
  클래스 1: 15.00
  클래스 2: 15.00
  클래스 3: 0.80
  클래스 4: 30.00

🎯 Business Priority 전략:
  클래스 0: 10.82
  클래스 1: 36.95
  클래스 2: 60.44
  클래스 3: 0.52
  클래스 4: 499.97

==================================================
🌳 모델 성능 비교:
==================================================

📊 Baseline (가중치 없음):
  교차검증 F1-Macro: 0.4369 (±0.0036)
  테스트 F1-Macro: 0.4346
  고래 전용 F1-Score: 0.3430
  OOB Score: 0.8422

📊 Balanced:
  교차검증 F1-Macro: 0.5001 (±0.0058)
  테스트 F1-Macro: 0.5002
  고래 전용 F1-Score: 0.4168
  OOB Score: 0.7115
  개선율: +15.1%

📊 Behavior Focused:
  교차검증 F1-Macro: 0.2634 (±0.0046)
  테스트 F1-Macro: 0.2620
  고래 전용 F1-Score: 0.2516
  OOB Score: 0.1825
  개선율: -39.7%

📊 Rarity Based:
  교차검증 F1-Macro: 0.5089 (±0.0059)
  테스트 F1-Macro: 0.5081
  고래 전용 F1-Score: 0.4212
  OOB Score: 0.7172
  개선율: +16.9%

📊 Business Priority:
  교차검증 F1-Macro: 0.3647 (±0.0065)
  테스트 F1-Macro: 0.3619
  고래 전용 F1-Score: 0.3377
  OOB Score: 0.3881
  개선율: -16.7%

==================================================
📊 피처 중요도 분석 (Baseline 모델):
==================================================
  concentration: 0.5400
  fee_btc: 0.3476
  total_volume_btc: 0.1125
  input_count: 0.0000
  output_count: 0.0000

==================================================
📈 클래스별 상세 성능 분석:
==================================================

🎯 Rarity Based 전략:
----------------------------------------
  클래스 0 (수집형고래):
    Precision: 0.6694
    Recall: 0.5125
    F1-Score: 0.5806
    Support: 39441.0
  클래스 1 (분산형고래):
    Precision: 0.1459
    Recall: 0.6835
    F1-Score: 0.2405
    Support: 7217.0
  클래스 2 (급행형고래):
    Precision: 0.4495
    Recall: 0.9924
    F1-Score: 0.6188
    Support: 13237.0
  클래스 3 (집중형고래):
    Precision: 0.9514
    Recall: 0.7393
    F1-Score: 0.8321
    Support: 204121.0
  클래스 4 (거대형고래):
    Precision: 0.1584
    Recall: 0.8815
    F1-Score: 0.2686
    Support: 2667.0

🎯 Balanced 전략:
----------------------------------------
  클래스 0 (수집형고래):
    Precision: 0.8090
    Recall: 0.4404
    F1-Score: 0.5703
    Support: 39441.0
  클래스 1 (분산형고래):
    Precision: 0.1358
    Recall: 0.7534
    F1-Score: 0.2301
    Support: 7217.0
  클래스 2 (급행형고래):
    Precision: 0.4540
    Recall: 0.9699
    F1-Score: 0.6185
    Support: 13237.0
  클래스 3 (집중형고래):
    Precision: 0.9452
    Recall: 0.7404
    F1-Score: 0.8304
    Support: 204121.0
  클래스 4 (거대형고래):
    Precision: 0.1457
    Recall: 0.9280
    F1-Score: 0.2519
    Support: 2667.0

🎯 Baseline (가중치 없음) 전략:
----------------------------------------
  클래스 0 (수집형고래):
    Precision: 0.9041
    Recall: 0.4106
    F1-Score: 0.5647
    Support: 39441.0
  클래스 1 (분산형고래):
    Precision: 0.6824
    Recall: 0.0441
    F1-Score: 0.0828
    Support: 7217.0
  클래스 2 (급행형고래):
    Precision: 0.5094
    Recall: 0.7602
    F1-Score: 0.6101
    Support: 13237.0
  클래스 3 (집중형고래):
    Precision: 0.8664
    Recall: 0.9701
    F1-Score: 0.9153
    Support: 204121.0
  클래스 4 (거대형고래):
    Precision: 0.0000
    Recall: 0.0000
    F1-Score: 0.0000
    Support: 2667.0

==================================================
💡 분석 결과 및 권장사항:
==================================================

🏆 최적 전략: rarity_based
📊 최고 F1-Score: 0.5081
📈 전체 개선율: +16.9%

💼 프로덕션 권장사항:
1. 'rarity_based' 전략 사용 권장 - 16.9% 성능 개선
2. 소수 클래스 탐지율 개선 효과 확인됨
3. 과적합 방지를 위한 교차 검증 지속 모니터링
4. 비즈니스 요구사항에 따른 클래스별 가중치 조정 고려
